////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Frida Framework by Shikifuyin
// Version : 1.0
// Requirements : V8 engine, latest version (8.4+), ECMAScript ES2020+ compliance
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// File : ./FridaLib/Environment/Environment.ts
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Description : Execution Environment
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
'use strict';

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Imports

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Exports
export {
	ARCHITECTURE,
	PLATFORM,
	RUNTIME,

	GetTargetArchitecture,
	GetTargetPlatform,

	GetFridaRunTime,
	GetFridaVersion,
	GetFridaCurrentHeapSize
};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Architecture
enum ARCHITECTURE {
	X86   = 'ia32',
	X64   = 'x64',
	ARM   = 'arm',
	ARM64 = 'arm64',
	MIPS  = 'mips'
};
function GetTargetArchitecture():ARCHITECTURE {
	return ARCHITECTURE[Process.arch as keyof typeof ARCHITECTURE];
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Platform
enum PLATFORM {
	Win32  = 'windows', // Windows
	Linux  = 'linux',   // Linux, Android
	Darwin = 'darwin',  // MacOS, iOS
	QNX    = 'qnx'      // BlackBerry
};
function GetTargetPlatform():PLATFORM {
	return PLATFORM[Process.platform as keyof typeof PLATFORM];
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Frida runtime
enum RUNTIME {
	Duktape = 'DUK', // Deprecated, use Frida options to enforce using V8
	V8      = 'V8'
};
function GetFridaRunTime():RUNTIME {
	return RUNTIME[Script.runtime as keyof typeof RUNTIME];
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Frida version
function GetFridaVersion():string {
	return Frida.version;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Frida Heap
function GetFridaCurrentHeapSize():number {
	return Frida.heapSize;
}
